{"version":3,"sources":["../node_modules/@material-ui/core/esm/Grid/Grid.js","../node_modules/@material-ui/core/esm/Container/Container.js","../node_modules/@material-ui/icons/Settings.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","presentation/components/cards/AreaCard.jsx","presentation/views/AreasView.jsx"],"names":["_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0___default","n","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_styles_createBreakpoints__WEBPACK_IMPORTED_MODULE_6__","SPACINGS","GRID_SIZES","Grid","a","forwardRef","props","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","Object","root","concat","String","createElement","StyledGrid","theme","boxSizing","display","flexWrap","width","margin","minWidth","direction-xs-column","flexDirection","direction-xs-column-reverse","direction-xs-row-reverse","wrap-xs-nowrap","wrap-xs-wrap-reverse","align-items-xs-center","align-items-xs-flex-start","align-items-xs-flex-end","align-items-xs-baseline","align-content-xs-center","align-content-xs-flex-start","align-content-xs-flex-end","align-content-xs-space-between","align-content-xs-space-around","justify-xs-center","justifyContent","justify-xs-flex-end","justify-xs-space-between","justify-xs-space-around","justify-xs-space-evenly","breakpoint","styles","forEach","themeSpacing","& > $item","padding","generateGutter","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","breakpoints","up","generateGrid","name","__webpack_exports__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","clsx__WEBPACK_IMPORTED_MODULE_5__","_styles__WEBPACK_IMPORTED_MODULE_6__","_utils__WEBPACK_IMPORTED_MODULE_7__","Container","_props$fixed","fixed","_props$maxWidth","_root","marginLeft","marginRight","paddingLeft","paddingRight","keys","values","acc","value","maxWidthXs","max","maxWidthSm","maxWidthMd","maxWidthLg","maxWidthXl","_interopRequireDefault","defineProperty","exports","default","_react","_default","Fragment","transform","fill","d","Card_Card","react_default","_props$raised","raised","objectWithoutProperties_default","Paper","extends_default","clsx_m","elevation","esm_Card_Card","withStyles","overflow","CardContent_CardContent","esm_CardContent_CardContent","&:last-child","paddingBottom","withRouter","_ref","areaId","history","temperature","targetTemperature","humidity","hotOrCold","temperatureDiff","style","Typography","color","variant","gutterBottom","Settings_default","onClick","push","homepage","Number","toFixed","RoomsView","fetchData","this","_this$props","areas","requestStatus","newArea","cards","map","data","Fade","in","cards_AreaCard","marginTop","marginBottom","borderBottom","fontWeight","CircularProgress","Button","connect","state","dispatch","getAreaStatus","openNewAreaDialog"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,GAAAM,EAAAN,EAAAE,EAAAG,GAAAE,GAAAP,EAAA,GAAAA,EAAA,IAAAQ,EAAAR,EAAA,GAAAS,EAAAT,EAAA,IAkBAU,EAAA,yBACAC,EAAA,uCAsEO,IA6HPC,EAAWN,EAAAO,EAAKC,WAAA,SAAAC,EAAAC,GAChB,IAAAC,EAAAF,EAAAG,aACAA,OAAA,IAAAD,EAAA,UAAAA,EACAE,EAAAJ,EAAAK,WACAA,OAAA,IAAAD,EAAA,UAAAA,EACAE,EAAAN,EAAAM,QACAC,EAAAP,EAAAQ,UACAC,EAAAT,EAAAU,UACAC,OAAA,IAAAF,EAAA,MAAAA,EACAG,EAAAZ,EAAAa,UACAA,OAAA,IAAAD,KACAE,EAAAd,EAAAe,UACAA,OAAA,IAAAD,EAAA,MAAAA,EACAE,EAAAhB,EAAAiB,KACAA,OAAA,IAAAD,KACAE,EAAAlB,EAAAmB,QACAA,OAAA,IAAAD,EAAA,aAAAA,EACAE,EAAApB,EAAAqB,GACAA,OAAA,IAAAD,KACAE,EAAAtB,EAAAuB,GACAA,OAAA,IAAAD,KACAE,EAAAxB,EAAAyB,GACAA,OAAA,IAAAD,KACAE,EAAA1B,EAAA2B,QACAA,OAAA,IAAAD,EAAA,EAAAA,EACAE,EAAA5B,EAAA6B,KACAA,OAAA,IAAAD,EAAA,OAAAA,EACAE,EAAA9B,EAAA+B,GACAA,OAAA,IAAAD,KACAE,EAAAhC,EAAAiC,GACAA,OAAA,IAAAD,KACAE,EAAAlC,EAAAmC,aACAA,OAAA,IAAAD,KACAE,EAAclD,IAAwBc,EAAA,mKAEtCQ,EAAkB6B,OAAA7C,EAAA,EAAA6C,CAAI/B,EAAAgC,KAAA/B,EAAAM,GAAA,CAAAP,EAAAO,UAAA,IAAAc,GAAArB,EAAA,cAAAiC,OAAAC,OAAAb,MAAAV,GAAAX,EAAAW,KAAAkB,GAAA7B,EAAA6B,aAAA,QAAApB,GAAAT,EAAA,gBAAAiC,OAAAC,OAAAzB,KAAA,SAAAc,GAAAvB,EAAA,WAAAiC,OAAAC,OAAAX,KAAA,YAAAxB,GAAAC,EAAA,kBAAAiC,OAAAC,OAAAnC,KAAA,YAAAF,GAAAG,EAAA,oBAAAiC,OAAAC,OAAArC,KAAA,eAAAgB,GAAAb,EAAA,cAAAiC,OAAAC,OAAArB,MAAA,IAAAc,GAAA3B,EAAA,WAAAiC,OAAAC,OAAAP,MAAA,IAAAR,GAAAnB,EAAA,WAAAiC,OAAAC,OAAAf,MAAA,IAAAF,GAAAjB,EAAA,WAAAiC,OAAAC,OAAAjB,MAAA,IAAAF,GAAAf,EAAA,WAAAiC,OAAAC,OAAAnB,MAAA,IAAAU,GAAAzB,EAAA,WAAAiC,OAAAC,OAAAT,MACtB,OAASxC,EAAAO,EAAK2C,cAAA9B,EAA0BtB,IAAQ,CAChDmB,YACAP,OACGmC,MAoHH,IAAAM,EAAiBL,OAAA5C,EAAA,EAAA4C,CAxRV,SAAAM,GACP,OAAStD,IAAQ,CAEjBiD,KAAA,GAGAzB,UAAA,CACA+B,UAAA,aACAC,QAAA,OACAC,SAAA,OACAC,MAAA,QAIA9B,KAAA,CACA2B,UAAA,aACAI,OAAA,KAKAb,aAAA,CACAc,SAAA,GAIAC,sBAAA,CACAC,cAAA,UAIAC,8BAAA,CACAD,cAAA,kBAIAE,2BAAA,CACAF,cAAA,eAIAG,iBAAA,CACAR,SAAA,UAIAS,uBAAA,CACAT,SAAA,gBAIAU,wBAAA,CACAnD,WAAA,UAIAoD,4BAAA,CACApD,WAAA,cAIAqD,0BAAA,CACArD,WAAA,YAIAsD,0BAAA,CACAtD,WAAA,YAIAuD,0BAAA,CACAzD,aAAA,UAIA0D,8BAAA,CACA1D,aAAA,cAIA2D,4BAAA,CACA3D,aAAA,YAIA4D,iCAAA,CACA5D,aAAA,iBAIA6D,gCAAA,CACA7D,aAAA,gBAIA8D,oBAAA,CACAC,eAAA,UAIAC,sBAAA,CACAD,eAAA,YAIAE,2BAAA,CACAF,eAAA,iBAIAG,0BAAA,CACAH,eAAA,gBAIAI,0BAAA,CACAJ,eAAA,iBA/IA,SAAAvB,EAAA4B,GACA,IAAAC,EAAA,GAgBA,OAfA7E,EAAA8E,QAAA,SAAA9C,GACA,IAAA+C,EAAA/B,EAAAhB,WAEA,IAAA+C,IAIAF,EAAA,WAAAjC,OAAAgC,EAAA,KAAAhC,OAAAZ,IAAA,CACAqB,QAAA0B,EAAA,EACA3B,MAAA,eAAAR,OAAAmC,EAAA,OACAC,YAAA,CACAC,QAAAF,EAAA,OAIAF,EAgIGK,CAAAlC,EAAA,MAA+BjD,EAAA,EAAcoF,OAAA,SAAAC,EAAAC,GAGhD,OA9LA,SAAAC,EAAAtC,EAAA4B,GACA,IAAAC,EAAA,GACA5E,EAAA6E,QAAA,SAAAS,GACA,IAAAF,EAAA,QAAAzC,OAAAgC,EAAA,KAAAhC,OAAA2C,GAEA,QAAAA,EAUA,YAAAA,EAAA,CAUA,IAAAnC,EAAA,GAAAR,OAAA4C,KAAAC,MAAAF,EAAA,iBAGAV,EAAAQ,GAAA,CACAK,UAAAtC,EACAuC,SAAA,EACAC,SAAAxC,QAfAyB,EAAAQ,GAAA,CACAK,UAAA,OACAC,SAAA,EACAC,SAAA,aAZAf,EAAAQ,GAAA,CACAK,UAAA,EACAC,SAAA,EACAC,SAAA,UAyBA,OAAAhB,EACIlF,IAAQ4F,EAAAT,GAEZS,EAAAtC,EAAA6C,YAAAC,GAAAlB,IAAAC,EAuJAkB,CAAAX,EAAApC,EAAAqC,GACAD,GACG,MA6JwB,CAC3BY,KAAA,WADiBtD,CAEhBxC,GAmBc+F,EAAA,sCCtYf,IAAAC,EAAA5G,EAAA,GAAA6G,EAAA7G,EAAAE,EAAA0G,GAAAE,EAAA9G,EAAA,GAAA+G,EAAA/G,EAAAE,EAAA4G,GAAAE,EAAAhH,EAAA,IAAAiH,EAAAjH,EAAAE,EAAA8G,GAAAE,EAAAlH,EAAA,GAAAmH,EAAAnH,EAAAE,EAAAgH,GAAAE,GAAApH,EAAA,GAAAA,EAAA,IAAAqH,EAAArH,EAAA,GAAAsH,EAAAtH,EAAA,GAmEAuH,EAAgBJ,EAAAtG,EAAKC,WAAA,SAAAC,EAAAC,GACrB,IAAAK,EAAAN,EAAAM,QACAE,EAAAR,EAAAQ,UACAC,EAAAT,EAAAU,UACAC,OAAA,IAAAF,EAAA,MAAAA,EACAgG,EAAAzG,EAAA0G,MACAA,OAAA,IAAAD,KACAE,EAAA3G,EAAAuF,SACAA,OAAA,IAAAoB,EAAA,KAAAA,EACAvE,EAAc4D,IAAwBhG,EAAA,wDAEtC,OAASoG,EAAAtG,EAAK2C,cAAA9B,EAA0BmF,IAAQ,CAChDtF,UAAe6B,OAAAgE,EAAA,EAAAhE,CAAI/B,EAAAgC,KAAA9B,EAAAkG,GAAApG,EAAAoG,OAAA,IAAAnB,GAAAjF,EAAA,WAAAiC,OAAkGF,OAAAkE,EAAA,EAAAlE,CAAUG,OAAA+C,OAC/HtF,OACGmC,MAqCYwD,EAAA,EAAAvD,OAAAiE,EAAA,EAAAjE,CA9GR,SAAAM,GACP,IAAAiE,EAEA,OAEAtE,MAAAsE,EAAA,CACA7D,MAAA,OACA8D,WAAA,OACAjE,UAAA,aACAkE,YAAA,OACAC,YAAApE,EAAAhB,QAAA,GACAqF,aAAArE,EAAAhB,QAAA,IACOuE,IAAeU,EAAAjE,EAAA6C,YAAAC,GAAA,OACtBsB,YAAApE,EAAAhB,QAAA,GACAqF,aAAArE,EAAAhB,QAAA,KACQuE,IAAeU,EAAAjE,EAAA6C,YAAAC,GAAA,OACvBsB,YAAApE,EAAAhB,QAAA,GACAqF,aAAArE,EAAAhB,QAAA,KACKiF,GAGLF,MAAArE,OAAA4E,KAAAtE,EAAA6C,YAAA0B,QAAApC,OAAA,SAAAqC,EAAA5C,GACA,IAAA6C,EAAAzE,EAAA6C,YAAA0B,OAAA3C,GAQA,OANA,IAAA6C,IACAD,EAAAxE,EAAA6C,YAAAC,GAAAlB,IAAA,CACAgB,SAAA6B,IAIAD,GACK,IAGLE,WAAgBnB,IAAe,GAAGvD,EAAA6C,YAAAC,GAAA,OAClCF,SAAAJ,KAAAmC,IAAA3E,EAAA6C,YAAA0B,OAAAjF,GAAA,OAIAsF,WAAgBrB,IAAe,GAAGvD,EAAA6C,YAAAC,GAAA,OAClCF,SAAA5C,EAAA6C,YAAA0B,OAAAzF,KAIA+F,WAAgBtB,IAAe,GAAGvD,EAAA6C,YAAAC,GAAA,OAClCF,SAAA5C,EAAA6C,YAAA0B,OAAA3F,KAIAkG,WAAgBvB,IAAe,GAAGvD,EAAA6C,YAAAC,GAAA,OAClCF,SAAA5C,EAAA6C,YAAA0B,OAAA7F,KAIAqG,WAAgBxB,IAAe,GAAGvD,EAAA6C,YAAAC,GAAA,OAClCF,SAAA5C,EAAA6C,YAAA0B,OAAAnF,OAuDyB,CACzB4D,KAAA,gBADe,CAEda,qCCtHD,IAAAmB,EAA6B1I,EAAQ,IAErCoD,OAAAuF,eAAAC,EAAA,cACAT,OAAA,IAEAS,EAAAC,aAAA,EAEA,IAAAC,EAAAJ,EAAoC1I,EAAQ,IAI5C+I,GAAA,EAFAL,EAA4C1I,EAAQ,KAEpD6I,SAAAC,EAAAD,QAAArF,cAAAsF,EAAAD,QAAAG,SAAA,KAAAF,EAAAD,QAAArF,cAAA,QACAyF,UAAA,kBACAC,KAAA,OACAC,EAAA,oBACCL,EAAAD,QAAArF,cAAA,QACDyF,UAAA,kBACAE,EAAA,goBACC,YAEDP,EAAAC,QAAAE,iOCTIK,EAAOC,EAAAxI,EAAKC,WAAA,SAAAC,EAAAC,GAChB,IAAAK,EAAAN,EAAAM,QACAE,EAAAR,EAAAQ,UACA+H,EAAAvI,EAAAwI,OACAA,OAAA,IAAAD,KACAnG,EAAcqG,IAAwBzI,EAAA,kCAEtC,OAASsI,EAAAxI,EAAK2C,cAAeiG,EAAA,EAAOC,IAAQ,CAC5CnI,UAAe6B,OAAAuG,EAAA,EAAAvG,CAAI/B,EAAAgC,KAAA9B,GACnBqI,UAAAL,EAAA,IACAvI,OACGmC,MAmBY0G,EAAAzG,OAAA0G,EAAA,EAAA1G,CApCR,CAEPC,KAAA,CACA0G,SAAA,WAiCyB,CACzBrD,KAAA,WADe,CAEZ0C,GC9BCY,EAAcX,EAAAxI,EAAKC,WAAA,SAAAC,EAAAC,GACvB,IAAAK,EAAAN,EAAAM,QACAE,EAAAR,EAAAQ,UACAC,EAAAT,EAAAU,UACAC,OAAA,IAAAF,EAAA,MAAAA,EACA2B,EAAcqG,IAAwBzI,EAAA,qCAEtC,OAASsI,EAAAxI,EAAK2C,cAAA9B,EAA0BgI,IAAQ,CAChDnI,UAAe6B,OAAAuG,EAAA,EAAAvG,CAAI/B,EAAAgC,KAAA9B,GACnBP,OACGmC,MAoBY8G,EAAA7G,OAAA0G,EAAA,EAAA1G,CAvCE,CAEjBC,KAAA,CACAsC,QAAA,GACAuE,eAAA,CACAC,cAAA,MAkCgC,CAChCzD,KAAA,kBADe,CAEZsD,qCCiBYI,cAvDE,SAAAC,GAOX,IANJC,EAMID,EANJC,OACAC,EAKIF,EALJE,QACA7D,EAII2D,EAJJ3D,KACA8D,EAGIH,EAHJG,YACAC,EAEIJ,EAFJI,kBACAC,EACIL,EADJK,SAEIC,EAAY,GACZC,EAAkB,EAClBH,EAAoBD,GACtBG,EAAY,OACZC,EAAkBH,EAAoBD,GAC7BC,GAAqBD,IAC9BG,EAAY,MACZC,EAAkBJ,EAAcC,GAKlC,OACEpB,EAAAxI,EAAA2C,cAACqG,EAAD,KACER,EAAAxI,EAAA2C,cAACyG,EAAD,KACEZ,EAAAxI,EAAA2C,cAAA,OAAKqH,MAAO,CAAEjH,QAAS,OAAQqB,eAAgB,kBAC7CoE,EAAAxI,EAAA2C,cAACsH,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,QAAQ,WAAWC,cAAY,GAC9DvE,GAEH2C,EAAAxI,EAAA2C,cAACsH,EAAA,EAAD,CAAYE,QAAQ,WAAWD,MAAM,iBAClCL,EADH,cAGArB,EAAAxI,EAAA2C,cAAC0H,EAAArK,EAAD,CACEsK,QAdkB,WAC1BZ,EAAQa,KAAR,GAAA9H,OAAgB+H,IAAhB,WAAA/H,OAAkCgH,KAc1B/I,UAAU,mBAGd8H,EAAAxI,EAAA2C,cAACsH,EAAA,EAAD,CAAYE,QAAQ,MACD,OAAhBR,EAAuB,OAASc,OAAOd,GAAae,QAAQ,GAD/D,SAGAlC,EAAAxI,EAAA2C,cAACsH,EAAA,EAAD,CAAYE,QAAQ,WAAWD,MAAM,iBAClCO,OAAOV,GAAiBW,QAAQ,GADnC,QACyC,IACxB,QAAdZ,EAAsB,QAAU,QAFnC,YAGGW,OAAOb,GAAmBc,QAAQ,GAHrC,sBCjCFC,+LAUFC,EADsBC,KAAK3K,MAAnB0K,8CAID,IAAAE,EACmCD,KAAK3K,MAAvC6K,EADDD,EACCC,MAAOC,EADRF,EACQE,cAAeC,EADvBH,EACuBG,QACxBC,EAAQH,EAAMI,IAAI,SAAAC,GAAI,OAC1B5C,EAAAxI,EAAA2C,cAAC0I,EAAA,EAAD,CAAMC,IAAE,EAACpG,IAAKkG,EAAKvF,MACjB2C,EAAAxI,EAAA2C,cAAC5C,EAAA,EAAD,CAAMoB,MAAI,EAACgB,GAAI,GAAIR,GAAI,EAAGF,GAAI,EAAGF,GAAI,GACnCiH,EAAAxI,EAAA2C,cAAC4I,EAAaH,OAIpB,OACE5C,EAAAxI,EAAA2C,cAAC+D,EAAA,EAAD,CAAWjB,SAAS,KAAKuE,MAAO,CAAEwB,UAAW,KAC3ChD,EAAAxI,EAAA2C,cAAA,OACEqH,MAAO,CACLjH,QAAS,OACTqB,eAAgB,gBAChB7D,WAAY,SACZkL,aAAc,GACdC,aAAc,mBAGhBlD,EAAAxI,EAAA2C,cAAA,OACEqH,MAAO,CACLjH,QAAS,OACTxC,WAAY,WAGdiI,EAAAxI,EAAA2C,cAACsH,EAAA,EAAD,CACEE,QAAQ,KACRH,MAAO,CAAE2B,WAAY,WACrBvB,cAAY,GAHd,SAOmB,aAAlBY,EACCxC,EAAAxI,EAAA2C,cAACiJ,EAAA,EAAD,CAAkB1B,MAAM,YAAYF,MAAO,CAAEjD,WAAY,MACvD,MAENyB,EAAAxI,EAAA2C,cAACkJ,EAAA,EAAD,CACE1B,QAAQ,YACRG,QAASW,EACTf,MAAM,YACN9E,KAAK,SAJP,aASFoD,EAAAxI,EAAA2C,cAAC5C,EAAA,EAAD,CAAMgB,WAAS,EAACc,QAAS,GACtBqJ,WA5DarK,aAiFTiL,sBAdS,SAAAC,GACtB,MAAO,CACLhB,MAAOgB,EAAMhB,MAAMK,KAAKL,MACxBC,cAAee,EAAMhB,MAAMK,KAAKJ,gBAIT,SAAAgB,GACzB,MAAO,CACLpB,UAAW,kBAAMoB,EAASC,gBAC1BhB,QAAS,kBAAMe,EAASE,kBAIbJ,CAGbnB","file":"static/js/9.85dafeee.chunk.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { keys as breakpointKeys } from '../styles/createBreakpoints';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: -themeSpacing / 2,\n      width: \"calc(100% + \".concat(themeSpacing, \"px)\"),\n      '& > $item': {\n        padding: themeSpacing / 2\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), breakpointKeys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = React.forwardRef(function (props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  // can't use named function expression since the function body references `Grid`\n  // which would point to the render function instead of the actual component\n  Grid.displayName = 'ForwardRef(Grid)';\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '../styles';\nimport { capitalize } from '../utils';\nexport var styles = function styles(theme) {\n  var _root;\n\n  return {\n    /* Styles applied to the root element. */\n    root: (_root = {\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, _defineProperty(_root, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }), _defineProperty(_root, theme.breakpoints.up('md'), {\n      paddingLeft: theme.spacing(4),\n      paddingRight: theme.spacing(4)\n    }), _root),\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"fixed\", \"maxWidth\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  transform: \"scale(1.2, 1.2)\",\n  fill: \"none\",\n  d: \"M0 0h20v20H0V0z\"\n}), _react.default.createElement(\"path\", {\n  transform: \"scale(1.2, 1.2)\",\n  d: \"M15.95 10.78c.03-.25.05-.51.05-.78s-.02-.53-.06-.78l1.69-1.32c.15-.12.19-.34.1-.51l-1.6-2.77c-.1-.18-.31-.24-.49-.18l-1.99.8c-.42-.32-.86-.58-1.35-.78L12 2.34c-.03-.2-.2-.34-.4-.34H8.4c-.2 0-.36.14-.39.34l-.3 2.12c-.49.2-.94.47-1.35.78l-1.99-.8c-.18-.07-.39 0-.49.18l-1.6 2.77c-.1.18-.06.39.1.51l1.69 1.32c-.04.25-.07.52-.07.78s.02.53.06.78L2.37 12.1c-.15.12-.19.34-.1.51l1.6 2.77c.1.18.31.24.49.18l1.99-.8c.42.32.86.58 1.35.78l.3 2.12c.04.2.2.34.4.34h3.2c.2 0 .37-.14.39-.34l.3-2.12c.49-.2.94-.47 1.35-.78l1.99.8c.18.07.39 0 .49-.18l1.6-2.77c.1-.18.06-.39-.1-.51l-1.67-1.32zM10 13c-1.65 0-3-1.35-3-3s1.35-3 3-3 3 1.35 3 3-1.35 3-3 3z\"\n})), 'Settings');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { withRouter } from 'react-router-dom';\nimport { homepage } from '../../../../package.json';\n\nconst AreaCard = ({\n  areaId,\n  history,\n  name,\n  temperature,\n  targetTemperature,\n  humidity,\n}) => {\n  let hotOrCold = '';\n  let temperatureDiff = 0;\n  if (targetTemperature > temperature) {\n    hotOrCold = 'cold';\n    temperatureDiff = targetTemperature - temperature;\n  } else if (targetTemperature <= temperature) {\n    hotOrCold = 'hot';\n    temperatureDiff = temperature - targetTemperature;\n  }\n  const handleSettingsClick = () => {\n    history.push(`${homepage}/areas/${areaId}`);\n  };\n  return (\n    <Card>\n      <CardContent>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Typography color=\"textSecondary\" variant=\"overline\" gutterBottom>\n            {name}\n          </Typography>\n          <Typography variant=\"overline\" color=\"textSecondary\">\n            {humidity}% Humidity\n          </Typography>\n          <SettingsIcon\n            onClick={handleSettingsClick}\n            className=\"settings-icon\"\n          />\n        </div>\n        <Typography variant=\"h2\">\n          {temperature === null ? '--.-' : Number(temperature).toFixed(1)}°C\n        </Typography>\n        <Typography variant=\"overline\" color=\"textSecondary\">\n          {Number(temperatureDiff).toFixed(1)}°C{' '}\n          {hotOrCold === 'hot' ? 'above' : 'below'} target (\n          {Number(targetTemperature).toFixed(1)}°C)\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nAreaCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  temperature: PropTypes.number.isRequired,\n  targetTemperature: PropTypes.number.isRequired,\n  areaId: PropTypes.string.isRequired,\n};\n\nexport default withRouter(AreaCard);\n","import React, { Component } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Fade from '@material-ui/core/Fade';\nimport { Button, CircularProgress } from '@material-ui/core';\nimport AreaCard from '../components/cards/AreaCard';\nimport {\n  getAreaStatus,\n  openNewAreaDialog,\n} from '../../redux/actions/areaActions';\n\nclass RoomsView extends Component {\n  static propTypes = {\n    areas: PropTypes.arrayOf(PropTypes.object).isRequired,\n    fetchData: PropTypes.func.isRequired,\n    requestStatus: PropTypes.string.isRequired,\n    newArea: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    const { fetchData } = this.props;\n    fetchData();\n  }\n\n  render() {\n    const { areas, requestStatus, newArea } = this.props;\n    const cards = areas.map(data => (\n      <Fade in key={data.name}>\n        <Grid item xs={12} sm={6} md={4} lg={3}>\n          <AreaCard {...data} />\n        </Grid>\n      </Fade>\n    ));\n    return (\n      <Container maxWidth=\"xl\" style={{ marginTop: 20 }}>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: 10,\n            borderBottom: '1px solid #777',\n          }}\n        >\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <Typography\n              variant=\"h3\"\n              style={{ fontWeight: 'lighter' }}\n              gutterBottom\n            >\n              Areas\n            </Typography>\n            {requestStatus === 'fetching' ? (\n              <CircularProgress color=\"secondary\" style={{ marginLeft: 30 }} />\n            ) : null}\n          </div>\n          <Button\n            variant=\"contained\"\n            onClick={newArea}\n            color=\"secondary\"\n            size=\"large\"\n          >\n            New Area\n          </Button>\n        </div>\n        <Grid container spacing={2}>\n          {cards}\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    areas: state.areas.data.areas,\n    requestStatus: state.areas.data.requestStatus,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: () => dispatch(getAreaStatus()),\n    newArea: () => dispatch(openNewAreaDialog()),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(RoomsView);\n"],"sourceRoot":""}