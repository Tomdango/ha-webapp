{"version":3,"sources":["presentation/components/cards/UnconfiguredNodesCard.jsx","presentation/views/SetupView.jsx"],"names":["UnconfiguredNodesCard","handleSetupClick","id","startNodeSetup","_this","props","_this2","this","uninitializedNodes","react_default","a","createElement","Paper","style","width","Typography","variant","fontWeight","padding","gutterBottom","Table","TableHead","TableRow","TableCell","TableBody","map","node","time","Date","createdAt","hours","getHours","toString","padStart","minutes","getMinutes","seconds","getSeconds","formattedTime","concat","nodeId","split","type","substring","toUpperCase","align","paddingRight","Button","onClick","size","Component","connect","state","nodes","discovery","dispatch","startNodeSetupAction","SetupView","Fragment","Container","maxWidth","marginTop","Grid","container","item","xs","md","className","cards_UnconfiguredNodesCard","SetupDialog"],"mappings":"sQAaMA,6MAMJC,iBAAmB,SAAAC,IAEjBC,EAD2BC,EAAKC,MAAxBF,gBACOD,4EAGR,IAAAI,EAAAC,KACCC,EAAuBD,KAAKF,MAA5BG,mBACR,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,MAAO,CAAEC,MAAO,SACrBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,QAAQ,KACRH,MAAO,CAAEI,WAAY,UAAWC,QAAS,IACzCC,cAAY,GAHd,sBAOAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD,WACAd,EAAAC,EAAAC,cAACY,EAAA,EAAD,aACAd,EAAAC,EAAAC,cAACY,EAAA,EAAD,mBACAd,EAAAC,EAAAC,cAACY,EAAA,EAAD,QAGJd,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACGhB,EAAmBiB,IAAI,SAAAC,GACtB,IAAMC,EAAO,IAAIC,KAAKF,EAAKG,WACrBC,EAAQH,EACXI,WACAC,WACAC,SAAS,EAAG,KACTC,EAAUP,EACbQ,aACAH,WACAC,SAAS,EAAG,KACTG,EAAUT,EACbU,aACAL,WACAC,SAAS,EAAG,KACTK,EAAa,GAAAC,OAAMT,EAAN,KAAAS,OAAeL,EAAf,KAAAK,OAA0BH,GAC7C,OACE3B,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD,KAAYG,EAAKc,OAAOC,MAAM,KAAK,IACnChC,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACGG,EAAKgB,KAAKC,UAAU,EAAG,GAAGC,cAC1BlB,EAAKgB,KAAKC,UAAU,IAEvBlC,EAAAC,EAAAC,cAACY,EAAA,EAAD,KAAYe,GACZ7B,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACEsB,MAAM,QACN3B,QAAQ,WACRL,MAAO,CAAEK,QAAS,EAAG4B,aAAc,KAEnCrC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACE/B,QAAQ,WACRgC,QAAS,kBAAM1C,EAAKL,iBAAiByB,EAAKc,SAC1CS,KAAK,SAHP,uBA5DgBC,aA0FrBC,cAZS,SAAAC,GACtB,MAAO,CACL5C,mBAAoB4C,EAAMC,MAAMC,UAAU9C,qBAInB,SAAA+C,GACzB,MAAO,CACLpD,eAAgB,SAAAD,GAAE,OAAIqD,EAASC,YAAqBtD,OAIzCiD,CAGbnD,YCpFayD,UAjBG,kBAChBhD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgD,SAAA,KACEjD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAWC,SAAS,KAAK/C,MAAO,CAAEgD,UAAW,KAC3CpD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYC,QAAQ,KAAKH,MAAO,CAAEI,WAAY,WAAaE,cAAY,GAAvE,SAGAV,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMC,WAAS,GACbtD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAU,yBAClC1D,EAAAC,EAAAC,cAACyD,EAAD,OAEF3D,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAU,4BAGxC1D,EAAAC,EAAAC,cAAC0D,EAAA,EAAD","file":"static/js/13.1a4cd764.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { startNodeSetup as startNodeSetupAction } from '../../../redux/actions/nodeActions';\n\nclass UnconfiguredNodesCard extends Component {\n  static propTypes = {\n    uninitializedNodes: PropTypes.arrayOf(PropTypes.Object).isRequired,\n    startNodeSetup: PropTypes.func.isRequired,\n  };\n\n  handleSetupClick = id => {\n    const { startNodeSetup } = this.props;\n    startNodeSetup(id);\n  };\n\n  render() {\n    const { uninitializedNodes } = this.props;\n    return (\n      <Paper style={{ width: '100%' }}>\n        <Typography\n          variant=\"h5\"\n          style={{ fontWeight: 'lighter', padding: 15 }}\n          gutterBottom\n        >\n          Unconfigured Nodes\n        </Typography>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Discovered</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {uninitializedNodes.map(node => {\n              const time = new Date(node.createdAt);\n              const hours = time\n                .getHours()\n                .toString()\n                .padStart(2, '0');\n              const minutes = time\n                .getMinutes()\n                .toString()\n                .padStart(2, '0');\n              const seconds = time\n                .getSeconds()\n                .toString()\n                .padStart(2, '0');\n              const formattedTime = `${hours}:${minutes}:${seconds}`;\n              return (\n                <TableRow>\n                  <TableCell>{node.nodeId.split('-')[0]}</TableCell>\n                  <TableCell>\n                    {node.type.substring(0, 1).toUpperCase()}\n                    {node.type.substring(1)}\n                  </TableCell>\n                  <TableCell>{formattedTime}</TableCell>\n                  <TableCell\n                    align=\"right\"\n                    padding=\"checkbox\"\n                    style={{ padding: 0, paddingRight: 10 }}\n                  >\n                    <Button\n                      variant=\"outlined\"\n                      onClick={() => this.handleSetupClick(node.nodeId)}\n                      size=\"small\"\n                    >\n                      Setup\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    uninitializedNodes: state.nodes.discovery.uninitializedNodes,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    startNodeSetup: id => dispatch(startNodeSetupAction(id)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UnconfiguredNodesCard);\n","import React from 'react';\nimport { Container, Typography, Grid } from '@material-ui/core';\nimport UnconfiguredNodesCard from '../components/cards/UnconfiguredNodesCard';\nimport SetupDialog from '../components/dialogs/SetupDialog';\n\nconst SetupView = () => (\n  <>\n    <Container maxWidth=\"xl\" style={{ marginTop: 20 }}>\n      <Typography variant=\"h3\" style={{ fontWeight: 'lighter' }} gutterBottom>\n        Setup\n      </Typography>\n      <Grid container>\n        <Grid item xs={12} md={6} className=\"nodes-table-container\">\n          <UnconfiguredNodesCard />\n        </Grid>\n        <Grid item xs={12} md={6} className=\"nodes-table-container\" />\n      </Grid>\n    </Container>\n    <SetupDialog />\n  </>\n);\n\nexport default SetupView;\n"],"sourceRoot":""}