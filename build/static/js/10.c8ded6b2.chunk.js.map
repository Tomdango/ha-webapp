{"version":3,"sources":["presentation/components/dialogs/SetTemperature.jsx","presentation/components/cards/NodeConfigPanel.jsx","presentation/components/cards/RoutineSetupPanel.jsx","presentation/components/dialogs/areaConfig/ChangeName.jsx","presentation/components/dialogs/areaConfig/AddRoutine.jsx","presentation/components/dialogs/Confirmation.jsx","presentation/components/cards/TempHistoryPanel.jsx","presentation/components/cards/AssignedNodesPanel.jsx","presentation/components/dialogs/AssignNode.jsx","presentation/views/AreaConfigView.jsx"],"names":["CustomComponent","_useCircularInputCont","useCircularInputContext","center","value","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","x","y","fill","style","fontFamily","fontSize","textAnchor","pointerEvents","toFixed","SetTemperature","_ref","onChange","onClose","open","onSubmit","_ref$initialValue","initialValue","_React$useState","React","useState","_React$useState2","Object","F_homeautomation_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setValue","previousRaw","floor","oldValue","newValue","flooredValue","Math","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","padding","marginBottom","react_circular_input__WEBPACK_IMPORTED_MODULE_6__","stroke","concat","display","justifyContent","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","variant","color","onClick","type","marginLeft","NodeConfigPanel","areaData","targetTemperature","openDialog","handleToggle","handleDeleteArea","heatingEnabled","react_default","Paper","Table","TableBody","TableRow","TableCell","width","paddingLeft","Label","Typography","name","align","Button","fullWidth","Waves","Pause","Switch","edge","checked","inputProps","aria-labelledby","RoutineSetupPanel","deleteRoutine","alignItems","routines","length","TableHead","map","routine","timeStart","Date","timeEnd","getHours","toString","padStart","padEnd","getMinutes","ButtonGroup","size","_id","withRouter","connect","state","inProgress","areas","config","dispatch","createNewArea","history","slicedToArray","submitted","setSubmitted","_React$useState3","_React$useState4","inputValue","setInputValue","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","margin","label","error","required","autoFocus","e","target","position","disabled","preventDefault","CircularProgress","top","left","marginTop","AddRoutineDialog","props","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","rest","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","validate","_this$state","errors","setState","keys","handleClick","selectedDay","repeat","includes","filter","day","toConsumableArray","handleSubmit","_this$props","match","addRoutine","id","params","_this$state2","Number","_this2","_this$props2","_this$state3","material_ui_pickers_esm","utils","DateFnsUtils","time","objectSpread","ampm","marginRight","Avatar","className","backgroundColor","blue","List","ListItem","ListItemText","ListItemSecondaryAction","Fragment","temp","Component","addNewRoutine","ConfirmationDialog","title","text","onAccept","onReject","DialogActions","TempHistoryPanel","reload","dataLoaded","tempHistory","axios","get","area","then","response","_response$data","data","humHistory","catch","err","status","convertData","now","parsedData","push","getTime","reduce","previousPoint","point","start","Temperature (Â°C)","Humidity (%)","hum","gutterBottom","Autorenew","cursor","es6","height","strokeDasharray","dataKey","domain","scale","tickFormatter","unixTime","moment","format","allowDecimals","dot","strokeWidth","red","AssignedNodesPanel","nodes","_areaData$registeredN","registeredNodes","previous","node","isMonitor","isActuator","_previous","monitor","actuator","_nodes$filter","n","nodeId","foundNode","_areaData$registeredN2","hasMonitor","hasActuator","Warning","yellow","filteredNodes","nodeData","split","toUpperCase","substring","AssignNode","addHeaterNode","heaters","emptyIndex","indexOf","handleMonitorChange","handleCancel","initialMonitor","initialHeaters","handleHeaterChange","previousValue","currentIndex","assignNodes","_this$props3","_this$props4","nodesLoaded","fetchNodes","_this$props5","monitorNodes","initialized","heaterNodes","Select","MenuItem","heater","index","array","AddCircle","RemoveCircle","defaultProps","nodesFetched","fetchAllNodes","allNodes","setNodes","AreaConfigView","dialog","handleClose","_areas$filter","areaId","confirmationModalTitle","confirmationModalText","onAcceptDeleteArea","deleteArea","homepage","routineId","_areas$filter3","_area$routines$filter","r","deleteRoutineId","onRejectDeleteRoutine","setTimeout","onAcceptDeleteRoutine","handleTemperature","updateTargetTemp","_this$props6","toggleHeating","_this$props7","fetchAreaData","_this$props8","areasNotFound","loaded","notFound","_areas$filter5","_areaData","Container","maxWidth","Fade","in","paddingBottom","borderBottom","Grid","container","item","xs","md","lg","cards_NodeConfigPanel","cards_AssignedNodesPanel","cards_RoutineSetupPanel","cards_TempHistoryPanel","ChangeName","AddRoutine","Confirmation","dialogs_AssignNode","fetchAreaDataAction","updateTargetTemperature","deleteRoutineAction","deleteAreaAction","on","toggleHeatingAction"],"mappings":"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","file":"static/js/10.c8ded6b2.chunk.js","sourcesContent":["import React from 'react';\nimport { Dialog, DialogContent, DialogTitle, Button } from '@material-ui/core';\nimport {\n  CircularInput,\n  CircularTrack,\n  CircularProgress,\n  CircularThumb,\n  useCircularInputContext,\n} from 'react-circular-input';\n\nconst CustomComponent = () => {\n  const { center, value } = useCircularInputContext();\n  return (\n    <text\n      x={center.x}\n      y={center.y + 15}\n      fill=\"#fafafa\"\n      style={{\n        fontFamily: 'Roboto',\n        fontSize: 50,\n        textAnchor: 'middle',\n        pointerEvents: 'none',\n      }}\n    >\n      {((value / 5) * 100 + 10).toFixed(1)}Â°C\n    </text>\n  );\n};\n\nconst SetTemperature = ({\n  onChange,\n  onClose,\n  open,\n  onSubmit,\n  initialValue = 10,\n}) => {\n  const [value, setValue] = React.useState((initialValue - 10) / 20);\n  let previousRaw = 0;\n\n  const floor = (oldValue, newValue) => {\n    if (previousRaw > 0.975 && newValue < 0.1) {\n      if (onChange) {\n        onChange(30.0);\n      }\n      return 1;\n    }\n    previousRaw = newValue;\n    const flooredValue = Math.floor(newValue * 40) / 40;\n    if (onChange) {\n      onChange(((value / 5) * 100 + 10).toFixed(1));\n    }\n    return flooredValue;\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Set Temperature</DialogTitle>\n      <DialogContent>\n        <div style={{ padding: 25, marginBottom: 50 }}>\n          <CircularInput\n            value={value}\n            onChange={newValue => setValue(floor(value, newValue))}\n          >\n            <CircularTrack />\n            <CircularProgress\n              stroke={`rgb(${value * 127.5 + 127.5}, ${200 -\n                value * 200}, ${255 - value * 255})`}\n            />\n            <CircularThumb fill=\"#777\" />\n            <CustomComponent />\n          </CircularInput>\n        </div>\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            style={{ marginBottom: 10 }}\n            onClick={onClose}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            style={{ marginLeft: 10, marginBottom: 10 }}\n            onClick={() => onSubmit(((value / 5) * 100 + 10).toFixed(1))}\n          >\n            Submit\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default SetTemperature;\n","import React from 'react';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography,\n  Button,\n  Switch,\n} from '@material-ui/core';\nimport { Label, Waves, Pause } from '@material-ui/icons';\n\nconst NodeConfigPanel = ({\n  areaData,\n  targetTemperature,\n  openDialog,\n  handleToggle,\n  handleDeleteArea,\n  heatingEnabled,\n}) => (\n  <Paper>\n    <Table>\n      <TableBody>\n        <TableRow>\n          <TableCell\n            padding=\"checkbox\"\n            style={{\n              width: 'inherit',\n              paddingLeft: 20,\n            }}\n          >\n            <Label />\n          </TableCell>\n          <TableCell>\n            <Typography color=\"textPrimary\">Name</Typography>\n          </TableCell>\n          <TableCell>\n            <Typography color=\"textSecondary\">{areaData.name}</Typography>\n          </TableCell>\n          <TableCell align=\"right\">\n            <Button fullWidth>Change</Button>\n          </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell\n            style={{\n              width: 'inherit',\n              paddingLeft: 20,\n            }}\n            padding=\"checkbox\"\n          >\n            <Waves />\n          </TableCell>\n          <TableCell>\n            <Typography color=\"textPrimary\">Target</Typography>\n          </TableCell>\n          <TableCell>\n            <Typography color=\"textSecondary\">\n              {targetTemperature ? `${targetTemperature}Â°C` : 'Unset'}\n            </Typography>\n          </TableCell>\n          <TableCell align=\"right\">\n            <Button fullWidth onClick={() => openDialog('setTemperature')}>\n              Set\n            </Button>\n          </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell\n            style={{\n              width: 'inherit',\n              paddingLeft: 20,\n            }}\n            padding=\"checkbox\"\n          >\n            <Pause />\n          </TableCell>\n          <TableCell>\n            <Typography color=\"textPrimary\">Enabled</Typography>\n          </TableCell>\n          <TableCell />\n          <TableCell\n            align=\"right\"\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <Switch\n              style={{\n                align: 'center',\n              }}\n              edge=\"start\"\n              checked={areaData.heatingEnabled}\n              onChange={handleToggle} // checked\n              value=\"heaterEnabled\"\n              inputProps={{\n                'aria-labelledby': 'switch-list-label-wifi',\n              }}\n            />\n          </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell\n            style={{\n              width: 'inherit',\n              paddingLeft: 20,\n            }}\n            padding=\"checkbox\"\n          >\n            <Pause />\n          </TableCell>\n          <TableCell>\n            <Typography color=\"textPrimary\">Delete</Typography>\n          </TableCell>\n          <TableCell />\n          <TableCell\n            align=\"right\"\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={handleDeleteArea}\n            >\n              Delete\n            </Button>\n          </TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  </Paper>\n);\n\nexport default NodeConfigPanel;\n","import React from 'react';\nimport {\n  TableCell,\n  Paper,\n  Typography,\n  Button,\n  Table,\n  TableHead,\n  TableRow,\n  TableBody,\n  ButtonGroup,\n} from '@material-ui/core';\n\nconst RoutineSetupPanel = ({ areaData, openDialog, deleteRoutine, style }) => (\n  <Paper>\n    <div\n      style={{\n        padding: 20,\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      }}\n    >\n      <Typography variant=\"h5\">Routines</Typography>\n      <Button\n        onClick={() => openDialog('addRoutine')}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Add\n      </Button>\n    </div>\n    {areaData.routines && areaData.routines.length > 0 ? (\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            {/* <TableCell>Repeat</TableCell> */}\n            <TableCell>Time</TableCell>\n            {/* <TableCell align=\"right\">Heating</TableCell> */}\n            <TableCell align=\"right\">Target</TableCell>\n            <TableCell align=\"right\" />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {areaData.routines.map(routine => {\n            const timeStart = new Date(routine.timeStart);\n            const timeEnd = new Date(routine.timeEnd);\n            return (\n              <TableRow>\n                <TableCell>{routine.name}</TableCell>\n                {/* <TableCell>\n                  {routine.repeat.map((item, index, array) => {\n                    return `${item\n                      .substring(0, 1)\n                      .toUpperCase()}${item.substring(1, 2)}`;\n                  })}\n                </TableCell> */}\n                <TableCell>\n                  {timeStart\n                    .getHours()\n                    .toString()\n                    .padStart(2, '0')\n                    .padEnd(2, '0')}\n                  :\n                  {timeStart\n                    .getMinutes()\n                    .toString()\n                    .padStart(2, '0')\n                    .padEnd(2, '0')}{' '}\n                  -{' '}\n                  {timeEnd\n                    .getHours()\n                    .toString()\n                    .padStart(2, '0')\n                    .padEnd(2, '0')}\n                  :\n                  {timeEnd\n                    .getMinutes()\n                    .toString()\n                    .padStart(2, '0')\n                    .padEnd(2, '0')}\n                </TableCell>\n                {/* <TableCell align=\"right\">\n                  {routine.heatingEnabled ? 'Y' : 'N'}\n                </TableCell> */}\n                <TableCell align=\"right\">\n                  {routine.targetTemperature\n                    ? `${routine.targetTemperature}Â°C`\n                    : '-'}\n                </TableCell>\n                <TableCell align=\"right\">\n                  <ButtonGroup fullWidth variant=\"outlined\">\n                    <Button size=\"small\">Edit</Button>\n                    <Button\n                      size=\"small\"\n                      onClick={() =>\n                        // eslint-disable-next-line no-underscore-dangle\n                        deleteRoutine(routine._id)\n                      }\n                    >\n                      Delete\n                    </Button>\n                  </ButtonGroup>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    ) : null}\n  </Paper>\n);\n\nexport default RoutineSetupPanel;\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from 'react-router-dom';\n\nconst NewAreaDialog = ({\n  open,\n  onClose,\n  inProgress,\n  createNewArea,\n  history,\n}) => {\n  const [submitted, setSubmitted] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState('');\n  const handleCancel = () => {\n    setInputValue('');\n    setSubmitted(false);\n    onClose();\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmitted(true);\n    if (inputValue) {\n      createNewArea(inputValue, history, () => {\n        setInputValue('');\n        setSubmitted(false);\n      });\n    }\n  };\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Create New Area</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Creating a new area allows you to assign Nodes and set custom\n          temperatures to that area.\n        </DialogContentText>\n        <form>\n          <TextField\n            margin=\"none\"\n            label=\"Area Name\"\n            error={submitted && !inputValue}\n            value={inputValue}\n            required\n            autoFocus\n            onChange={e => setInputValue(e.target.value)}\n            type=\"text\"\n            fullWidth\n            style={{ marginBottom: 20 }}\n          />\n\n          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              style={{ marginBottom: 10 }}\n              onClick={handleCancel}\n            >\n              Cancel\n            </Button>\n            <div style={{ position: 'relative' }}>\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                disabled={inProgress}\n                style={{ marginLeft: 10, marginBottom: 10 }}\n                onClick={handleSubmit}\n              >\n                Submit\n              </Button>\n              {inProgress ? (\n                <CircularProgress\n                  size={24}\n                  style={{\n                    position: 'absolute',\n                    color: '#fff',\n                    top: '50%',\n                    left: '50%',\n                    marginTop: -17,\n                    marginLeft: -6,\n                  }}\n                />\n              ) : null}\n            </div>\n          </div>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    inProgress: state.areas.config.inProgress === 'changeName',\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // changeName: (name, history, callback) =>\n    //   dispatch(changeName(name, history, callback)),\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(NewAreaDialog),\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  Button,\n  Avatar,\n  Switch,\n  ListItemText,\n  ListItem,\n  List,\n  Typography,\n  ListItemSecondaryAction,\n} from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport { TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { blue } from '@material-ui/core/colors';\nimport { addNewRoutine } from '../../../../redux/actions/areaActions';\nimport SetTemperature from '../SetTemperature';\n\nclass AddRoutineDialog extends Component {\n  constructor(props, ...rest) {\n    super(props, ...rest);\n    this.state = {\n      name: '',\n      timeStart: null,\n      timeEnd: null,\n      heatingEnabled: true,\n      repeat: [],\n      errors: {},\n      targetTemperature: null,\n      openDialog: false,\n    };\n  }\n\n  validate = () => {\n    const { timeStart, timeEnd, name } = this.state;\n    const errors = {};\n    if (timeStart === null) {\n      errors.timeStart = true;\n    }\n    if (name.length === 0) {\n      errors.name = true;\n    }\n    if (timeEnd === null) {\n      errors.timeEnd = true;\n    }\n    this.setState({ errors });\n    if (Object.keys(errors).length > 0) {\n      return false;\n    }\n    return true;\n  };\n\n  handleClick = selectedDay => {\n    const { repeat } = this.state;\n    if (repeat.includes(selectedDay)) {\n      this.setState({ repeat: repeat.filter(day => day !== selectedDay) });\n    } else {\n      this.setState({ repeat: [...repeat, selectedDay] });\n    }\n  };\n\n  handleSubmit = () => {\n    if (this.validate()) {\n      const { match, addRoutine, onClose } = this.props;\n      const { id } = match.params;\n      const {\n        timeStart,\n        timeEnd,\n        heatingEnabled,\n        repeat,\n        targetTemperature,\n        name,\n      } = this.state;\n      addRoutine(id, {\n        name,\n        timeStart: timeStart.toString(),\n        timeEnd: timeEnd.toString(),\n        heatingEnabled,\n        repeat,\n        targetTemperature: Number(targetTemperature),\n      });\n      onClose();\n    }\n  };\n\n  openDialog = open => {\n    this.setState({ openDialog: open });\n  };\n\n  render() {\n    const { open, onClose } = this.props;\n    const {\n      timeStart,\n      timeEnd,\n      heatingEnabled,\n      repeat,\n      targetTemperature,\n      openDialog,\n      errors,\n      name,\n    } = this.state;\n    return (\n      <Dialog open={open} onClose={onClose}>\n        <DialogTitle>Create New Routine</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Note: If you do not select a repeat, the routine will run daily.\n          </DialogContentText>\n          <TextField\n            margin=\"none\"\n            required\n            value={name}\n            onChange={e => this.setState({ name: e.target.value })}\n            error={errors.name && name.length === 0}\n            label=\"Name\"\n            type=\"text\"\n            fullWidth\n            style={{ marginBottom: 30 }}\n          />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <div style={{ marginBottom: 30, display: 'flex' }}>\n              <TimePicker\n                onChange={time =>\n                  this.setState({\n                    timeStart: time,\n                    errors: { ...errors, timeStart: false },\n                  })\n                }\n                value={timeStart}\n                ampm={false}\n                required\n                error={errors.timeStart}\n                label=\"Time Start\"\n                style={{ marginRight: 5 }}\n              />\n              <TimePicker\n                onChange={time =>\n                  this.setState({\n                    timeEnd: time,\n                    errors: { ...errors, timeEnd: false },\n                  })\n                }\n                style={{ marginLeft: 5 }}\n                required\n                error={errors.timeEnd}\n                ampm={false}\n                value={timeEnd}\n                label=\"Time End\"\n              />\n            </div>\n          </MuiPickersUtilsProvider>\n          <Typography color=\"textSecondary\" style={{ marginBottom: 10 }}>\n            Repeat\n          </Typography>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              marginBottom: 30,\n            }}\n          >\n            <Avatar\n              className=\"date-select-button\"\n              style={{\n                backgroundColor: repeat.includes('mon') ? blue[500] : '',\n              }}\n              onClick={() => this.handleClick('mon')}\n            >\n              M\n            </Avatar>\n            <Avatar\n              className=\"date-select-button\"\n              style={{\n                backgroundColor: repeat.includes('tue') ? blue[500] : '',\n              }}\n              onClick={() => this.handleClick('tue')}\n            >\n              T\n            </Avatar>\n            <Avatar\n              className=\"date-select-button\"\n              style={{\n                backgroundColor: repeat.includes('wed') ? blue[500] : '',\n              }}\n              onClick={() => this.handleClick('wed')}\n            >\n              W\n            </Avatar>\n            <Avatar\n              className=\"date-select-button\"\n              style={{\n                backgroundColor: repeat.includes('thu') ? blue[500] : '',\n              }}\n              onClick={() => this.handleClick('thu')}\n            >\n              T\n            </Avatar>\n            <Avatar\n              className=\"date-select-button\"\n              style={{\n                backgroundColor: repeat.includes('fri') ? blue[500] : '',\n              }}\n              onClick={() => this.handleClick('fri')}\n            >\n              F\n            </Avatar>\n            <Avatar\n              className=\"date-select-button\"\n              style={{\n                backgroundColor: repeat.includes('sat') ? blue[500] : '',\n              }}\n              onClick={() => this.handleClick('sat')}\n            >\n              S\n            </Avatar>\n            <Avatar\n              className=\"date-select-button\"\n              style={{\n                backgroundColor: repeat.includes('sun') ? blue[500] : '',\n              }}\n              onClick={() => this.handleClick('sun')}\n            >\n              S\n            </Avatar>\n          </div>\n\n          <List>\n            <ListItem style={{ padding: 0, marginBottom: 10 }}>\n              <Typography color=\"textSecondary\">Actions</Typography>\n            </ListItem>\n            <ListItem style={{ padding: 0, marginBottom: 10 }}>\n              <ListItemText>Heating Enabled</ListItemText>\n              <ListItemSecondaryAction>\n                <Switch\n                  onChange={e =>\n                    this.setState({ heatingEnabled: e.target.checked })\n                  }\n                  checked={heatingEnabled}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n            <ListItem style={{ padding: 0, marginBottom: 10 }}>\n              <ListItemText>Target Temperature</ListItemText>\n              <ListItemSecondaryAction>\n                <Button\n                  onClick={() => {\n                    if (targetTemperature === null) {\n                      this.setState({ targetTemperature: 10 });\n                    }\n                    this.openDialog(true);\n                  }}\n                  disabled={!heatingEnabled}\n                >\n                  {heatingEnabled ? (\n                    <>\n                      {targetTemperature ? `${targetTemperature}Â°C` : 'Not Set'}\n                    </>\n                  ) : (\n                    'Heating Disabled'\n                  )}\n                </Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          </List>\n          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              style={{ marginBottom: 10 }}\n              onClick={onClose}\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={this.handleSubmit}\n              variant=\"contained\"\n              type=\"submit\"\n              style={{ marginLeft: 10, marginBottom: 10 }}\n            >\n              Submit\n            </Button>\n          </div>\n        </DialogContent>\n        <SetTemperature\n          onSubmit={temp => {\n            this.setState({ targetTemperature: temp });\n            this.openDialog(false);\n          }}\n          initialValue={targetTemperature || 10}\n          open={openDialog}\n          onClose={() => this.openDialog(false)}\n        />\n      </Dialog>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    inProgress: state.areas.config.inProgress === 'changeName',\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addRoutine: (id, routine) => dispatch(addNewRoutine(id, routine)),\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(AddRoutineDialog),\n);\n","import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\n\nconst ConfirmationDialog = ({ title, text, open, onAccept, onReject }) => (\n  <Dialog open={open}>\n    <DialogTitle>{title}</DialogTitle>\n    <DialogContent>\n      {text ? <DialogContentText>{text}</DialogContentText> : null}\n      <DialogActions>\n        <Button\n          onClick={onReject}\n          size=\"large\"\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          No\n        </Button>\n        <Button\n          onClick={onAccept}\n          size=\"large\"\n          color=\"secondary\"\n          variant=\"contained\"\n        >\n          Yes\n        </Button>\n      </DialogActions>\n    </DialogContent>\n  </Dialog>\n);\n\nexport default ConfirmationDialog;\n","import React, { Component } from 'react';\nimport { Paper, Typography } from '@material-ui/core';\nimport moment from 'moment';\nimport {\n  LineChart,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  Legend,\n  Line,\n} from 'recharts';\nimport axios from 'axios';\nimport { red, blue } from '@material-ui/core/colors';\nimport { Autorenew } from '@material-ui/icons';\nimport { area } from '../../../core/constants/routes';\n\nclass TempHistoryPanel extends Component {\n  constructor(props, ...rest) {\n    super(props, ...rest);\n    this.state = {\n      dataLoaded: false,\n      tempHistory: [],\n      error: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.reload();\n  }\n\n  reload = () => {\n    this.setState({ dataLoaded: false, tempHistory: [], error: 0 });\n    const { id } = this.props;\n    axios\n      .get(area.tempHistory(id))\n      .then(response => {\n        const { humHistory, tempHistory } = response.data;\n        this.setState({\n          dataLoaded: true,\n          tempHistory,\n          humHistory,\n        });\n      })\n      .catch(err => {\n        if (err.response.status === 404) {\n          this.setState({ dataLoaded: true, error: 404 });\n        } else {\n          this.setState({ dataLoaded: true, error: 500 });\n        }\n      });\n  };\n\n  convertData = () => {\n    const { tempHistory, humHistory } = this.state;\n    const now = new Date();\n    const parsedData = [];\n    parsedData.push({ value: null, time: now.getTime() - 43200000 });\n    tempHistory.reduce((previousPoint, point) => {\n      const timeStart = new Date(point.start);\n      if (timeStart.getTime() > now.getTime() - 43200000) {\n        parsedData.push({\n          'Temperature (Â°C)': point.temp,\n          time: timeStart.getTime(),\n        });\n      }\n      return point;\n    });\n    humHistory.reduce((previousPoint, point) => {\n      const timeStart = new Date(point.start);\n      if (timeStart.getTime() > now.getTime() - 43200000) {\n        parsedData.push({\n          'Humidity (%)': point.hum,\n          time: timeStart.getTime(),\n        });\n      }\n      return point;\n    });\n    return parsedData;\n  };\n\n  render() {\n    const { dataLoaded, error } = this.state;\n    if (!dataLoaded) {\n      return (\n        <Paper style={{ width: '100%', marginTop: 20 }}>\n          <div style={{ padding: 20 }}>\n            <Typography variant=\"h5\" gutterBottom>\n              Loading...\n            </Typography>\n          </div>\n        </Paper>\n      );\n    }\n    if (error === 404) {\n      return (\n        <Paper style={{ width: '100%', marginTop: 20 }}>\n          <div style={{ padding: 20 }}>\n            <Typography variant=\"h5\" gutterBottom>\n              No History.\n            </Typography>\n          </div>\n        </Paper>\n      );\n    }\n    if (error === 500) {\n      return (\n        <Paper style={{ width: '100%', marginTop: 20 }}>\n          <div style={{ padding: 20 }}>\n            <Typography variant=\"h5\" gutterBottom>\n              Failed to load history.\n            </Typography>\n          </div>\n        </Paper>\n      );\n    }\n    return (\n      <Paper style={{ width: '100%', marginTop: 20 }}>\n        <div style={{ padding: 20 }}>\n          <div\n            style={{ display: 'flex', alignItems: 'center', marginBottom: 20 }}\n          >\n            <Typography variant=\"h5\">12 Hour History</Typography>\n            <Autorenew\n              style={{ cursor: 'pointer', marginLeft: 10 }}\n              onClick={this.reload}\n            />\n          </div>\n          <ResponsiveContainer width=\"100%\" height={350}>\n            <LineChart data={this.convertData()}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis\n                dataKey=\"time\"\n                domain={['dataMin', 'auto']}\n                name=\"Time\"\n                scale=\"linear\"\n                tickFormatter={unixTime => moment(unixTime).format('HH:mm')}\n                type=\"number\"\n              />\n              <YAxis type=\"number\" domain={[0, 100]} allowDecimals />\n              <Tooltip />\n              <Legend />\n              <Line\n                type=\"linear\"\n                dot={false}\n                dataKey=\"Temperature (Â°C)\"\n                strokeWidth={3}\n                stroke={red[500]}\n              />\n              <Line\n                type=\"linear\"\n                dataKey=\"Humidity (%)\"\n                strokeWidth={2}\n                dot={false}\n                stroke={blue[500]}\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nexport default TempHistoryPanel;\n","import React from 'react';\nimport {\n  Paper,\n  Typography,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Button,\n} from '@material-ui/core';\nimport { Warning } from '@material-ui/icons';\nimport { yellow } from '@material-ui/core/colors';\n\nconst AssignedNodesPanel = ({ areaData, openDialog, nodes }) => {\n  const [hasMonitor, hasActuator] = areaData.registeredNodes.reduce(\n    (previous, node) => {\n      let isMonitor = false;\n      let isActuator = false;\n      const [monitor, actuator] = previous;\n      const [foundNode] = nodes.filter(n => n.nodeId === node);\n      if (foundNode) {\n        if (foundNode.type === 'monitor') {\n          isMonitor = true;\n        }\n        if (foundNode.type === 'heater') {\n          isActuator = true;\n        }\n      }\n      return [monitor || isMonitor, actuator || isActuator];\n    },\n    [false, false],\n  );\n  return (\n    <Paper style={{ width: '100%', marginTop: 20, marginBottom: 20 }}>\n      <div style={{ padding: 20 }}>\n        <div\n          style={{\n            marginBottom: 10,\n            display: 'flex',\n            justifyContent: 'space-between',\n          }}\n        >\n          <Typography variant=\"h5\">Assigned Nodes</Typography>\n          <Button\n            onClick={() => openDialog('assignNode')}\n            variant=\"contained\"\n            color=\"secondary\"\n          >\n            Assign\n          </Button>\n        </div>\n        {hasMonitor ? null : (\n          <Typography\n            gutterBottom\n            style={{ display: 'flex', alignItems: 'center' }}\n          >\n            <Warning style={{ color: yellow[900] }} />\n            This area does not have a monitor node.\n          </Typography>\n        )}\n        {hasActuator ? null : (\n          <Typography style={{ display: 'flex', alignItems: 'center' }}>\n            <Warning style={{ color: yellow[900] }} />\n            This area has no actuators.\n          </Typography>\n        )}\n      </div>\n      {areaData.registeredNodes.length > 0 ? (\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Type</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {areaData.registeredNodes.map(node => {\n              const filteredNodes = nodes.filter(n => node === n.nodeId);\n              if (filteredNodes.length !== 1) return null;\n              const nodeData = filteredNodes[0];\n              return (\n                <TableRow>\n                  <TableCell>{nodeData.nodeId.split('-')[0]}</TableCell>\n                  <TableCell>{nodeData.name}</TableCell>\n                  <TableCell>\n                    {nodeData.type[0].toUpperCase()}\n                    {nodeData.type.substring(1)}\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      ) : null}\n    </Paper>\n  );\n};\n\nexport default AssignedNodesPanel;\n","import React, { Component } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  Select,\n  MenuItem,\n  Typography,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\nimport { AddCircle, RemoveCircle } from '@material-ui/icons';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchAllNodes } from '../../../redux/actions/nodeActions';\nimport { setNodes } from '../../../redux/actions/areaActions';\n\nclass AssignNode extends Component {\n  static defaultProps = {\n    initialMonitor: 'none',\n    initialHeaters: [],\n  };\n\n  constructor(props, ...rest) {\n    super(props, ...rest);\n    const { initialMonitor, initialHeaters } = this.props;\n    this.state = {\n      monitor: initialMonitor,\n      heaters: [...initialHeaters, ''],\n    };\n  }\n\n  componentDidMount() {\n    const { nodesLoaded, fetchNodes } = this.props;\n    if (!nodesLoaded) {\n      fetchNodes();\n    }\n  }\n\n  addHeaterNode = () => {\n    const { heaters } = this.state;\n    const hasEmpty = heaters.includes('') || heaters.includes('error');\n    if (!hasEmpty) {\n      this.setState({ heaters: [...heaters, ''] });\n    } else {\n      const emptyIndex = heaters.indexOf('');\n      if (emptyIndex !== -1) {\n        heaters[emptyIndex] = 'error';\n        this.setState({ heaters });\n      }\n    }\n  };\n\n  handleMonitorChange = e => {\n    this.setState({ monitor: e.target.value });\n  };\n\n  handleCancel = () => {\n    const { onClose } = this.props;\n    onClose();\n    const { initialMonitor, initialHeaters } = this.props;\n    this.setState({\n      monitor: initialMonitor,\n      heaters: [...initialHeaters, ''],\n    });\n  };\n\n  handleHeaterChange = (previousValue, newValue) => {\n    const { heaters } = this.state;\n    const currentIndex = heaters.indexOf(previousValue);\n    heaters[currentIndex] = newValue;\n    this.setState({ heaters });\n  };\n\n  handleSubmit = () => {\n    const { assignNodes, match } = this.props;\n    const { id } = match.params;\n    const { heaters, monitor } = this.state;\n    const allNodes = [...heaters, monitor];\n    assignNodes(id, allNodes.filter(node => node !== '' && node !== 'none'));\n    this.handleCancel();\n  };\n\n  render() {\n    const { open, onClose, nodes } = this.props;\n    const { monitor, heaters } = this.state;\n    const monitorNodes = nodes.filter(\n      node => node.type === 'monitor' && node.initialized === true,\n    );\n    const heaterNodes = nodes.filter(\n      node => node.type === 'heater' && node.initialized === true,\n    );\n    return (\n      <Dialog open={open} onClose={onClose}>\n        <DialogTitle>Assign Nodes</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            An area can only have one monitor node, but a monitor node can be\n            assigned to multiple areas.\n          </DialogContentText>\n          <Typography variant=\"subtitle2\">Monitor Node</Typography>\n          <Select\n            value={monitor}\n            style={{ marginBottom: 30 }}\n            onChange={this.handleMonitorChange}\n            fullWidth\n          >\n            <MenuItem value=\"none\">None</MenuItem>\n            {monitorNodes.map(node => (\n              <MenuItem value={node.nodeId}>{node.name}</MenuItem>\n            ))}\n          </Select>\n\n          <Typography variant=\"subtitle2\">Heater Nodes</Typography>\n          {heaters.map((heater, index, array) => (\n            <div style={{ display: 'flex' }}>\n              <Select\n                value={heater}\n                onChange={e => this.handleHeaterChange(heater, e.target.value)}\n                error={heater === 'error'}\n                style={{ marginBottom: 15 }}\n                fullWidth\n              >\n                <MenuItem value=\"none\" />\n                {heaterNodes.map(node => (\n                  <MenuItem value={node.nodeId}>{node.name}</MenuItem>\n                ))}\n              </Select>\n              {index === array.length - 1 ? (\n                <AddCircle\n                  onClick={this.addHeaterNode}\n                  style={{ marginLeft: 10, cursor: 'pointer' }}\n                />\n              ) : (\n                <RemoveCircle style={{ marginLeft: 10, cursor: 'pointer' }} />\n              )}\n            </div>\n          ))}\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={this.handleCancel}\n            color=\"secondary\"\n            variant=\"contained\"\n          >\n            Cancel\n          </Button>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={this.handleSubmit}\n          >\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    nodes: state.nodes.data.nodes,\n    nodesFetched: state.nodes.data.nodesFetched,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchNodes: () => dispatch(fetchAllNodes()),\n    assignNodes: (id, allNodes) => dispatch(setNodes(id, allNodes)),\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(AssignNode),\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Container, Typography, Button, Fade, Grid } from '@material-ui/core';\nimport NodeConfigPanel from '../components/cards/NodeConfigPanel';\nimport {\n  fetchAreaData as fetchAreaDataAction,\n  updateTargetTemperature,\n  deleteRoutine as deleteRoutineAction,\n  deleteArea as deleteAreaAction,\n  toggleHeating as toggleHeatingAction,\n} from '../../redux/actions/areaActions';\nimport RoutineSetupPanel from '../components/cards/RoutineSetupPanel';\nimport ChangeNameDialog from '../components/dialogs/areaConfig/ChangeName';\nimport AddRoutineDialog from '../components/dialogs/areaConfig/AddRoutine';\nimport SetTemperatureDialog from '../components/dialogs/SetTemperature';\nimport ConfirmationDialog from '../components/dialogs/Confirmation';\nimport TempHistoryPanel from '../components/cards/TempHistoryPanel';\nimport AssignedNodesPanel from '../components/cards/AssignedNodesPanel';\nimport AssignNode from '../components/dialogs/AssignNode';\nimport { fetchAllNodes } from '../../redux/actions/nodeActions';\nimport { homepage } from '../../../package.json';\n\nclass AreaConfigView extends Component {\n  static propTypes = {\n    areas: PropTypes.arrayOf(PropTypes.object).isRequired,\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        id: PropTypes.string,\n      }).isRequired,\n    }).isRequired,\n    fetchAreaData: PropTypes.func.isRequired,\n  };\n\n  constructor(props, ...rest) {\n    super(props, ...rest);\n    this.state = {\n      openDialog: '',\n      confirmationModalTitle: '',\n      confirmationModalText: '',\n      deleteRoutineId: '',\n    };\n  }\n\n  componentDidMount() {\n    const { areas, match, fetchAreaData, nodesLoaded, fetchNodes } = this.props;\n    const { id } = match.params;\n    const selectedArea = areas.filter(area => area.areaId === id);\n    if (selectedArea.length === 0) {\n      fetchAreaData(id);\n    }\n    if (!nodesLoaded) {\n      fetchNodes();\n    }\n  }\n\n  openDialog = dialog => {\n    this.setState({ openDialog: dialog });\n  };\n\n  handleClose = () => {\n    this.setState({ openDialog: '' });\n  };\n\n  handleDeleteArea = () => {\n    const { areas, match } = this.props;\n    const { id } = match.params;\n    const [area] = areas.filter(area => area.areaId === id);\n    this.setState({\n      confirmationModalTitle: `Delete Area \"${area.name}\"`,\n      confirmationModalText: 'Are you sure you want to delete this area?',\n    });\n    this.openDialog('deleteConfirmation');\n  };\n\n  onAcceptDeleteArea = () => {\n    const { match, deleteArea, history } = this.props;\n    const { id } = match.params;\n    deleteArea(id);\n    history.push(`${homepage}/areas`);\n  };\n\n  deleteRoutine = routineId => {\n    const { areas, match } = this.props;\n    const { id } = match.params;\n    const [area] = areas.filter(area => area.areaId === id);\n    const [routine] = area.routines.filter(r => r._id === routineId);\n    this.setState({\n      deleteRoutineId: routineId,\n      confirmationModalTitle: 'Routine Deletion',\n      confirmationModalText: `Are you sure you want to delete the routine \"${routine.name}\"? This routine will no longer trigger any events.`,\n    });\n    this.openDialog('confirmation');\n  };\n\n  onRejectDeleteRoutine = () => {\n    this.handleClose();\n    setTimeout(\n      () =>\n        this.setState({\n          confirmationModalText: '',\n          confirmationModalTitle: '',\n        }),\n      200,\n    );\n  };\n\n  onAcceptDeleteRoutine = () => {\n    const { deleteRoutineId } = this.state;\n    const { deleteRoutine, match } = this.props;\n    const { id } = match.params;\n    this.handleClose();\n    deleteRoutine(id, deleteRoutineId);\n    setTimeout(() => {\n      this.setState({\n        confirmationModalText: '',\n        confirmationModalTitle: '',\n      });\n    }, 200);\n  };\n\n  handleTemperature = temp => {\n    const { updateTargetTemp, match } = this.props;\n    const { id } = match.params;\n    updateTargetTemp(id, temp);\n    this.handleClose();\n  };\n\n  handleToggle = e => {\n    const { match, toggleHeating } = this.props;\n    const { id } = match.params;\n    const { checked } = e.target;\n    toggleHeating(id, checked);\n  };\n\n  render() {\n    const { areasNotFound, match, areas, history, nodes } = this.props;\n    const {\n      openDialog,\n      confirmationModalTitle,\n      confirmationModalText,\n    } = this.state;\n    const { id } = match.params;\n    const loaded = !!areas.length;\n    const notFound = areasNotFound.includes(id);\n    let areaData = {};\n    if (!notFound && loaded) {\n      [areaData] = areas.filter(area => area.areaId === id);\n    }\n\n    const { name, targetTemperature } = areaData;\n    return (\n      <>\n        <Container maxWidth=\"xl\" style={{ marginTop: 20 }}>\n          <Fade in>\n            <div\n              style={{\n                display: 'flex',\n                marginBottom: 20,\n                alignItems: 'stretch',\n                paddingBottom: 20,\n                borderBottom: '1px solid #777',\n              }}\n            >\n              <Button\n                size=\"large\"\n                variant=\"outlined\"\n                onClick={() => history.push(`${homepage}/areas`)}\n              >\n                Back\n              </Button>\n              <Typography style={{ marginLeft: 30 }} variant=\"h2\">\n                {name}\n              </Typography>\n            </div>\n          </Fade>\n\n          {notFound ? (\n            <Typography variant=\"h2\">\n              Sorry, that area wasn&apos;t found.\n            </Typography>\n          ) : (\n            <>\n              <Fade in>\n                <Grid container>\n                  <Grid\n                    className=\"nodes-table-container\"\n                    item\n                    xs={12}\n                    md={6}\n                    lg={4}\n                  >\n                    <NodeConfigPanel\n                      targetTemperature={targetTemperature}\n                      openDialog={this.openDialog}\n                      handleToggle={this.handleToggle}\n                      handleDeleteArea={this.handleDeleteArea}\n                      areaData={areaData}\n                    />\n                    <AssignedNodesPanel\n                      nodes={nodes}\n                      areaData={areaData}\n                      openDialog={this.openDialog}\n                    />\n                  </Grid>\n                  <Grid\n                    className=\"nodes-table-container\"\n                    item\n                    xs={12}\n                    md={8}\n                    lg={8}\n                  >\n                    <RoutineSetupPanel\n                      areaData={areaData}\n                      openDialog={this.openDialog}\n                      deleteRoutine={this.deleteRoutine}\n                    />\n                    <TempHistoryPanel\n                      id={id}\n                      style={{ marginTop: 1000 }}\n                      areaData={areaData}\n                    />\n                  </Grid>\n                </Grid>\n              </Fade>\n            </>\n          )}\n        </Container>\n        <ChangeNameDialog\n          onClose={this.handleClose}\n          open={openDialog === 'changeName'}\n        />\n        <AddRoutineDialog\n          onClose={this.handleClose}\n          open={openDialog === 'addRoutine'}\n        />\n        <SetTemperatureDialog\n          onSubmit={this.handleTemperature}\n          onClose={this.handleClose}\n          open={openDialog === 'setTemperature'}\n        />\n        <ConfirmationDialog\n          onAccept={this.onAcceptDeleteRoutine}\n          onReject={this.onRejectDeleteRoutine}\n          title={confirmationModalTitle}\n          text={confirmationModalText}\n          open={openDialog === 'confirmation'}\n        />\n        <ConfirmationDialog\n          onAccept={this.onAcceptDeleteArea}\n          onReject={this.onRejectDeleteRoutine}\n          title={confirmationModalTitle}\n          text={confirmationModalText}\n          open={openDialog === 'deleteConfirmation'}\n        />\n        <AssignNode\n          id={id}\n          open={openDialog === 'assignNode'}\n          onClose={this.handleClose}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    areas: state.areas.data.areas,\n    areasNotFound: state.areas.data.areasNotFound,\n    nodes: state.nodes.data.nodes,\n    nodesLoaded: state.nodes.data.nodesLoaded,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAreaData: id => dispatch(fetchAreaDataAction(id)),\n    updateTargetTemp: (id, temp) => dispatch(updateTargetTemperature(id, temp)),\n    deleteRoutine: (id, routineId) =>\n      dispatch(deleteRoutineAction(id, routineId)),\n    deleteArea: id => dispatch(deleteAreaAction(id)),\n    fetchNodes: () => dispatch(fetchAllNodes()),\n    toggleHeating: (id, on) => dispatch(toggleHeatingAction(id, on)),\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(AreaConfigView),\n);\n"],"sourceRoot":""}