{"version":3,"sources":["presentation/components/dialogs/SetTemperature.jsx","presentation/components/cards/GlobalRoutinesCard.jsx","presentation/components/dialogs/routines/AddGlobalRoutine.jsx","redux/actions/routinesActions.js","presentation/views/RoutinesView.jsx"],"names":["CustomComponent","_useCircularInputCont","useCircularInputContext","center","value","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","x","y","fill","style","fontFamily","fontSize","textAnchor","pointerEvents","toFixed","SetTemperature","_ref","onChange","onClose","open","onSubmit","_ref$initialValue","initialValue","_React$useState","React","useState","_React$useState2","Object","F_homeautomation_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setValue","previousRaw","floor","oldValue","newValue","flooredValue","Math","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","padding","marginBottom","react_circular_input__WEBPACK_IMPORTED_MODULE_6__","stroke","concat","display","justifyContent","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","variant","color","onClick","type","marginLeft","GlobalRoutinesCard","globalRoutines","SelectExcludeAreasDialog","areas","excludedAreas","slicedToArray","excAreas","setExcAreas","handleChange","e","_e$target","target","checked","toConsumableArray","newExcAreas","filter","id","react_default","Dialog","DialogTitle","DialogContent","minWidth","FormGroup","map","area","FormControlLabel","control","Checkbox","includes","areaId","label","name","DialogActions","Button","size","AddRoutineDialog","props","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","rest","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","validate","_this$state","state","timeStart","timeEnd","errors","setState","keys","handleClick","selectedDay","repeat","day","handleSubmit","_this$props","match","addRoutine","params","_this$state2","heatingEnabled","targetTemperature","toString","Number","openDialog","excludeAreasDialogOpen","_this2","_this$props2","dialogOpen","_this$state3","Fragment","DialogContentText","TextField","margin","required","error","fullWidth","material_ui_pickers_esm","utils","DateFnsUtils","time","objectSpread","ampm","marginRight","Typography","Avatar","className","backgroundColor","blue","List","ListItem","ListItemText","ListItemSecondaryAction","Switch","disabled","temp","AddGlobalRoutine_SelectExcludeAreasDialog","Component","withRouter","connect","routines","add","data","dispatch","types","openAddDialog","Container","maxWidth","marginTop","gutterBottom","Grid","container","item","xs","md","Paper","cards_GlobalRoutinesCard","AddGlobalRoutine"],"mappings":"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","file":"static/js/11.533db322.chunk.js","sourcesContent":["import React from 'react';\nimport { Dialog, DialogContent, DialogTitle, Button } from '@material-ui/core';\nimport {\n  CircularInput,\n  CircularTrack,\n  CircularProgress,\n  CircularThumb,\n  useCircularInputContext,\n} from 'react-circular-input';\n\nconst CustomComponent = () => {\n  const { center, value } = useCircularInputContext();\n  return (\n    <text\n      x={center.x}\n      y={center.y + 15}\n      fill=\"#fafafa\"\n      style={{\n        fontFamily: 'Roboto',\n        fontSize: 50,\n        textAnchor: 'middle',\n        pointerEvents: 'none',\n      }}\n    >\n      {((value / 5) * 100 + 10).toFixed(1)}°C\n    </text>\n  );\n};\n\nconst SetTemperature = ({\n  onChange,\n  onClose,\n  open,\n  onSubmit,\n  initialValue = 10,\n}) => {\n  const [value, setValue] = React.useState((initialValue - 10) / 20);\n  let previousRaw = 0;\n\n  const floor = (oldValue, newValue) => {\n    if (previousRaw > 0.975 && newValue < 0.1) {\n      if (onChange) {\n        onChange(30.0);\n      }\n      return 1;\n    }\n    previousRaw = newValue;\n    const flooredValue = Math.floor(newValue * 40) / 40;\n    if (onChange) {\n      onChange(((value / 5) * 100 + 10).toFixed(1));\n    }\n    return flooredValue;\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Set Temperature</DialogTitle>\n      <DialogContent>\n        <div style={{ padding: 25, marginBottom: 50 }}>\n          <CircularInput\n            value={value}\n            onChange={newValue => setValue(floor(value, newValue))}\n          >\n            <CircularTrack />\n            <CircularProgress\n              stroke={`rgb(${value * 127.5 + 127.5}, ${200 -\n                value * 200}, ${255 - value * 255})`}\n            />\n            <CircularThumb fill=\"#777\" />\n            <CustomComponent />\n          </CircularInput>\n        </div>\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            style={{ marginBottom: 10 }}\n            onClick={onClose}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            style={{ marginLeft: 10, marginBottom: 10 }}\n            onClick={() => onSubmit(((value / 5) * 100 + 10).toFixed(1))}\n          >\n            Submit\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default SetTemperature;\n","import React from 'react';\n\nconst GlobalRoutinesCard = ({ globalRoutines }) => {\n  return null;\n};\n\nexport default GlobalRoutinesCard;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  Button,\n  Avatar,\n  Switch,\n  ListItemText,\n  ListItem,\n  List,\n  Typography,\n  ListItemSecondaryAction,\n  DialogActions,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n} from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport { TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { blue } from '@material-ui/core/colors';\nimport { addNewRoutine } from '../../../../redux/actions/areaActions';\nimport SetTemperature from '../SetTemperature';\nimport { closeCreateGlobalRoutineDialog } from '../../../../redux/actions/routinesActions';\n\nconst SelectExcludeAreasDialog = ({ areas, open, onSubmit, excludedAreas }) => {\n  const [excAreas, setExcAreas] = React.useState(excludedAreas);\n  const handleChange = e => {\n    const { checked, value } = e.target;\n    if (!checked) {\n      const newExcAreas = excAreas.filter(id => id !== value);\n      setExcAreas(newExcAreas);\n    } else {\n      setExcAreas([...excAreas, value]);\n    }\n  };\n  return (\n    <Dialog open={open}>\n      <DialogTitle>Excluded Areas</DialogTitle>\n      <DialogContent style={{ minWidth: 400 }}>\n        <FormGroup>\n          {areas.map(area => (\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={excAreas.includes(area.areaId)}\n                  value={area.areaId}\n                  onChange={handleChange}\n                />\n              }\n              label={area.name}\n            />\n          ))}\n        </FormGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          size=\"small\"\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={onSubmit}\n        >\n          Select\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nclass AddRoutineDialog extends Component {\n  constructor(props, ...rest) {\n    super(props, ...rest);\n    this.state = {\n      name: '',\n      timeStart: null,\n      timeEnd: null,\n      heatingEnabled: true,\n      repeat: [],\n      errors: {},\n      targetTemperature: null,\n      openDialog: false,\n      excludedAreas: [],\n      excludeAreasDialogOpen: false,\n    };\n  }\n\n  validate = () => {\n    const { timeStart, timeEnd, name } = this.state;\n    const errors = {};\n    if (timeStart === null) {\n      errors.timeStart = true;\n    }\n    if (name.length === 0) {\n      errors.name = true;\n    }\n    if (timeEnd === null) {\n      errors.timeEnd = true;\n    }\n    this.setState({ errors });\n    if (Object.keys(errors).length > 0) {\n      return false;\n    }\n    return true;\n  };\n\n  handleClick = selectedDay => {\n    const { repeat } = this.state;\n    if (repeat.includes(selectedDay)) {\n      this.setState({ repeat: repeat.filter(day => day !== selectedDay) });\n    } else {\n      this.setState({ repeat: [...repeat, selectedDay] });\n    }\n  };\n\n  handleSubmit = () => {\n    if (this.validate()) {\n      const { match, addRoutine, onClose } = this.props;\n      const { id } = match.params;\n      const {\n        timeStart,\n        timeEnd,\n        heatingEnabled,\n        repeat,\n        targetTemperature,\n        name,\n      } = this.state;\n      addRoutine(id, {\n        name,\n        timeStart: timeStart.toString(),\n        timeEnd: timeEnd.toString(),\n        heatingEnabled,\n        repeat,\n        targetTemperature: Number(targetTemperature),\n      });\n      onClose();\n    }\n  };\n\n  openDialog = open => {\n    this.setState({ openDialog: open });\n  };\n\n  render() {\n    const { open, onClose, dialogOpen, areas } = this.props;\n    const {\n      timeStart,\n      timeEnd,\n      heatingEnabled,\n      repeat,\n      targetTemperature,\n      openDialog,\n      errors,\n      name,\n      excludeAreasDialogOpen,\n      excludedAreas,\n    } = this.state;\n    return (\n      <>\n        <Dialog open={dialogOpen} onClose={onClose}>\n          <DialogTitle>Create New Global Routine</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Note: If you do not select a repeat, the routine will run daily.\n            </DialogContentText>\n            <TextField\n              margin=\"none\"\n              required\n              value={name}\n              onChange={e => this.setState({ name: e.target.value })}\n              error={errors.name && name.length === 0}\n              label=\"Name\"\n              type=\"text\"\n              fullWidth\n              style={{ marginBottom: 30 }}\n            />\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <div style={{ marginBottom: 30, display: 'flex' }}>\n                <TimePicker\n                  onChange={time =>\n                    this.setState({\n                      timeStart: time,\n                      errors: { ...errors, timeStart: false },\n                    })\n                  }\n                  value={timeStart}\n                  ampm={false}\n                  required\n                  error={errors.timeStart}\n                  label=\"Time Start\"\n                  style={{ marginRight: 5 }}\n                />\n                <TimePicker\n                  onChange={time =>\n                    this.setState({\n                      timeEnd: time,\n                      errors: { ...errors, timeEnd: false },\n                    })\n                  }\n                  style={{ marginLeft: 5 }}\n                  required\n                  error={errors.timeEnd}\n                  ampm={false}\n                  value={timeEnd}\n                  label=\"Time End\"\n                />\n              </div>\n            </MuiPickersUtilsProvider>\n            <Typography color=\"textSecondary\" style={{ marginBottom: 10 }}>\n              Repeat\n            </Typography>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                marginBottom: 30,\n              }}\n            >\n              <Avatar\n                className=\"date-select-button\"\n                style={{\n                  backgroundColor: repeat.includes('mon') ? blue[500] : '',\n                }}\n                onClick={() => this.handleClick('mon')}\n              >\n                M\n              </Avatar>\n              <Avatar\n                className=\"date-select-button\"\n                style={{\n                  backgroundColor: repeat.includes('tue') ? blue[500] : '',\n                }}\n                onClick={() => this.handleClick('tue')}\n              >\n                T\n              </Avatar>\n              <Avatar\n                className=\"date-select-button\"\n                style={{\n                  backgroundColor: repeat.includes('wed') ? blue[500] : '',\n                }}\n                onClick={() => this.handleClick('wed')}\n              >\n                W\n              </Avatar>\n              <Avatar\n                className=\"date-select-button\"\n                style={{\n                  backgroundColor: repeat.includes('thu') ? blue[500] : '',\n                }}\n                onClick={() => this.handleClick('thu')}\n              >\n                T\n              </Avatar>\n              <Avatar\n                className=\"date-select-button\"\n                style={{\n                  backgroundColor: repeat.includes('fri') ? blue[500] : '',\n                }}\n                onClick={() => this.handleClick('fri')}\n              >\n                F\n              </Avatar>\n              <Avatar\n                className=\"date-select-button\"\n                style={{\n                  backgroundColor: repeat.includes('sat') ? blue[500] : '',\n                }}\n                onClick={() => this.handleClick('sat')}\n              >\n                S\n              </Avatar>\n              <Avatar\n                className=\"date-select-button\"\n                style={{\n                  backgroundColor: repeat.includes('sun') ? blue[500] : '',\n                }}\n                onClick={() => this.handleClick('sun')}\n              >\n                S\n              </Avatar>\n            </div>\n\n            <List>\n              <ListItem style={{ padding: 0, marginBottom: 10 }}>\n                <Typography color=\"textSecondary\">Actions</Typography>\n              </ListItem>\n              <ListItem style={{ padding: 0, marginBottom: 10 }}>\n                <ListItemText>Heating Enabled</ListItemText>\n                <ListItemSecondaryAction>\n                  <Switch\n                    onChange={e =>\n                      this.setState({ heatingEnabled: e.target.checked })\n                    }\n                    checked={heatingEnabled}\n                  />\n                </ListItemSecondaryAction>\n              </ListItem>\n              <ListItem style={{ padding: 0, marginBottom: 10 }}>\n                <ListItemText>Target Temperature</ListItemText>\n                <ListItemSecondaryAction>\n                  <Button\n                    onClick={() => {\n                      if (targetTemperature === null) {\n                        this.setState({ targetTemperature: 10 });\n                      }\n                      this.openDialog(true);\n                    }}\n                    disabled={!heatingEnabled}\n                  >\n                    {heatingEnabled ? (\n                      <>\n                        {targetTemperature\n                          ? `${targetTemperature}°C`\n                          : 'Not Set'}\n                      </>\n                    ) : (\n                      'Heating Disabled'\n                    )}\n                  </Button>\n                </ListItemSecondaryAction>\n              </ListItem>\n            </List>\n            <List>\n              <ListItem style={{ padding: 0, marginBottom: 10 }}>\n                <Typography color=\"textSecondary\">\n                  Additional Options\n                </Typography>\n              </ListItem>\n              <ListItem style={{ padding: 0, marginBottom: 10 }}>\n                <ListItemText>Exclude Areas</ListItemText>\n                <ListItemSecondaryAction>\n                  <Button\n                    onClick={() =>\n                      this.setState({ excludeAreasDialogOpen: true })\n                    }\n                  >\n                    Select\n                  </Button>\n                </ListItemSecondaryAction>\n              </ListItem>\n            </List>\n\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ marginBottom: 10 }}\n                onClick={onClose}\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={this.handleSubmit}\n                variant=\"contained\"\n                type=\"submit\"\n                style={{ marginLeft: 10, marginBottom: 10 }}\n              >\n                Submit\n              </Button>\n            </div>\n          </DialogContent>\n          <SetTemperature\n            onSubmit={temp => {\n              this.setState({ targetTemperature: temp });\n              this.openDialog(false);\n            }}\n            initialValue={targetTemperature || 10}\n            open={openDialog}\n            onClose={() => this.openDialog(false)}\n          />\n        </Dialog>\n        <SelectExcludeAreasDialog\n          open={excludeAreasDialogOpen}\n          excludedAreas={excludedAreas}\n          onSubmit={excAreas =>\n            this.setState({\n              excludedAreas: excAreas,\n              excludeAreasDialogOpen: false,\n            })\n          }\n          areas={areas}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogOpen: state.routines.add.dialogOpen,\n    areas: state.areas.data.areas,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClose: () => dispatch(closeCreateGlobalRoutineDialog()),\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(AddRoutineDialog),\n);\n","import * as types from '../types/routinesTypes';\n\nexport const openCreateGlobalRoutineDialog = () => {\n  return { type: types.OPEN_ADD_MODAL };\n};\n\nexport const closeCreateGlobalRoutineDialog = () => {\n  return { type: types.CLOSE_ADD_MODAL };\n};\n\nexport const addRoutine = () => {};\n","import React from 'react';\nimport { Typography, Container, Grid, Paper, Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport GlobalRoutinesCard from '../components/cards/GlobalRoutinesCard';\nimport {\n  openCreateGlobalRoutineDialog,\n  closeCreateGlobalRoutineDialog,\n} from '../../redux/actions/routinesActions';\nimport AddGlobalRoutineDialog from '../components/dialogs/routines/AddGlobalRoutine';\n\nconst RoutinesView = ({ globalRoutines, openAddDialog }) => {\n  return (\n    <>\n      <Container maxWidth=\"xl\" style={{ marginTop: 20 }}>\n        <Typography variant=\"h2\" gutterBottom>\n          Routines\n        </Typography>\n        <Grid container>\n          <Grid item xs={12} md={6}>\n            <Paper style={{ padding: 15 }}>\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <Typography variant=\"h5\">Global Routines</Typography>\n                <Button\n                  color=\"secondary\"\n                  onClick={openAddDialog}\n                  variant=\"contained\"\n                >\n                  CREATE\n                </Button>\n              </div>\n              <Typography variant=\"body2\" gutterBottom>\n                Global Routines apply to all areas within ths system, unless\n                rooms are excluded.\n              </Typography>\n              {globalRoutines ? (\n                <GlobalRoutinesCard globalRoutines={globalRoutines} />\n              ) : (\n                <Typography variant=\"subtitle1\">\n                  You have no global routines.\n                </Typography>\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n      <AddGlobalRoutineDialog />\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openAddDialog: () => dispatch(openCreateGlobalRoutineDialog()),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(RoutinesView);\n"],"sourceRoot":""}