{"version":3,"sources":["presentation/components/cards/RoomCard.jsx","presentation/views/NodesView.jsx"],"names":["RoomCard","setActiveNode","id","name","_this","props","_this2","this","_this$props","area","nodes","react_default","a","createElement","Fade","in","Paper","className","Typography","style","padding","fontWeight","variant","Table","TableHead","TableRow","TableCell","TableBody","map","data","display","alignItems","component","scope","concat","online","type","align","paddingRight","react_router_dom","to","homepage","onClick","textDecoration","Button","size","Component","connect","dispatch","fetchNodeInfo","NodesView","fetchData","requestStatus","rooms","nodeData","Grid","item","xs","md","cards_RoomCard","Container","maxWidth","marginTop","gutterBottom","CircularProgress","color","marginLeft","container","state","areas","getAreaData"],"mappings":"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","file":"static/js/12.1203915c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { homepage } from '../../../../package.json';\nimport { fetchNodeInfo } from '../../../redux/actions/nodeActions';\n\nclass RoomCard extends Component {\n  static propTypes = {\n    nodes: PropTypes.arrayOf(PropTypes.object).isRequired,\n    area: PropTypes.string.isRequired,\n    setActiveNode: PropTypes.func.isRequired,\n  };\n\n  setActiveNode = (id, name) => {\n    const { setActiveNode } = this.props;\n    setActiveNode(id, name);\n  };\n\n  render() {\n    const { area, nodes } = this.props;\n    return (\n      <Fade in>\n        <Paper className=\"nodes-table-paper\">\n          <Typography\n            style={{ padding: 15, fontWeight: 'lighter' }}\n            variant=\"h5\"\n          >\n            {area}\n          </Typography>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Type</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {nodes.map(data => (\n                <TableRow>\n                  <TableCell\n                    style={{ display: 'flex', alignItems: 'center' }}\n                    component=\"th\"\n                    scope=\"row\"\n                  >\n                    <div\n                      className={`nodetable-status nodetable-status__${\n                        data.online ? 'online' : 'offline'\n                      }`}\n                    />\n                    {data.name}\n                  </TableCell>\n                  <TableCell>{data.type}</TableCell>\n                  <TableCell\n                    align=\"right\"\n                    style={{ padding: 0, paddingRight: 10 }}\n                  >\n                    <Link\n                      to={`${homepage}/nodes/${data.id}`}\n                      onClick={() => this.setActiveNode(data.id, data.name)}\n                      style={{ textDecoration: 'none' }}\n                    >\n                      <Button variant=\"outlined\" size=\"small\">\n                        Control\n                      </Button>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Paper>\n      </Fade>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setActiveNode: (id, name) => dispatch(fetchNodeInfo(id, name)),\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(RoomCard);\n","import React, { Component } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RoomCard from '../components/cards/RoomCard';\nimport { getAreaData } from '../../redux/actions/nodeActions';\n\nclass NodesView extends Component {\n  static propTypes = {\n    requestStatus: PropTypes.string.isRequired,\n    fetchData: PropTypes.func.isRequired,\n    nodeData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  };\n\n  componentDidMount() {\n    const { fetchData } = this.props;\n    fetchData();\n  }\n\n  render() {\n    const { requestStatus, nodeData } = this.props;\n    const rooms = nodeData.map(data => (\n      <Grid item xs={12} md={6} className=\"nodes-table-container\">\n        <RoomCard {...data} />\n      </Grid>\n    ));\n    return (\n      <Container maxWidth=\"xl\" style={{ marginTop: 20 }}>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n          }}\n        >\n          <Typography\n            variant=\"h3\"\n            style={{ fontWeight: 'lighter' }}\n            gutterBottom\n          >\n            Nodes\n          </Typography>\n          {requestStatus === 'fetching' ? (\n            <CircularProgress color=\"secondary\" style={{ marginLeft: 30 }} />\n          ) : null}\n        </div>\n\n        <Grid container>{rooms}</Grid>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    requestStatus: state.nodes.areas.requestStatus,\n    nodeData: state.nodes.areas.data,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: () => dispatch(getAreaData()),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NodesView);\n"],"sourceRoot":""}